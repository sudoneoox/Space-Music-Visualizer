{"id":"Smlw","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\build\\es2019\\factories\\channel-merger-node-constructor.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\src\\factories\\channel-merger-node-constructor.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624402241757},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createChannelMergerNodeConstructor=void 0;const e={channelCount:1,channelCountMode:\"explicit\",channelInterpretation:\"speakers\",numberOfInputs:6},t=(t,n,r,o,s)=>(class extends t{constructor(t,c){const u=o(t),a={...e,...c};super(t,!1,r(u,a),s(u)?n():null)}});exports.createChannelMergerNodeConstructor=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":116}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":1,"column":124}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":1,"column":126}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":1,"column":127}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":1,"column":140}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":1,"column":142}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":6,"column":22},"generated":{"line":1,"column":159}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":1,"column":170}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":1,"column":192}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":1,"column":203}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":8,"column":20},"generated":{"line":1,"column":218}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":13},"generated":{"line":1,"column":221}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":88},"generated":{"line":1,"column":223}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":1,"column":224}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":1,"column":226}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":1,"column":228}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":1,"column":230}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":1,"column":232}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":1,"column":237}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":18,"column":63},"generated":{"line":1,"column":251}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":1,"column":253}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":19,"column":20},"generated":{"line":1,"column":265}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":19,"column":32},"generated":{"line":1,"column":267}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":20,"column":18},"generated":{"line":1,"column":270}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":20,"column":18},"generated":{"line":1,"column":276}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":20,"column":34},"generated":{"line":1,"column":278}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":20,"column":51},"generated":{"line":1,"column":280}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":21,"column":18},"generated":{"line":1,"column":283}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":1,"column":285}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":21,"column":39},"generated":{"line":1,"column":289}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":21,"column":59},"generated":{"line":1,"column":294}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":27,"column":18},"generated":{"line":1,"column":297}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":27,"column":18},"generated":{"line":1,"column":303}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":27,"column":27},"generated":{"line":1,"column":306}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":22,"column":44},"generated":{"line":1,"column":308}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":22,"column":74},"generated":{"line":1,"column":310}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":22,"column":89},"generated":{"line":1,"column":312}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":24,"column":17},"generated":{"line":1,"column":315}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":24,"column":45},"generated":{"line":1,"column":317}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":24,"column":62},"generated":{"line":1,"column":320}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":24,"column":98},"generated":{"line":1,"column":324}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":333}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":341}},{"source":"../../../src/factories/channel-merger-node-constructor.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":1,"column":376}}],"sources":{"../../../src/factories/channel-merger-node-constructor.ts":"import { IChannelMergerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelMergerNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n} as const;\n\nexport const createChannelMergerNodeConstructor: TChannelMergerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class ChannelMergerNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelMergerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n"},"lineCount":null}},"error":null,"hash":"86336cc2be072b7235469544ecc136ee","cacheData":{"env":{}}}