{"id":"node_modules/flac.js/src/demuxer.js","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624288368876},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\flac.js\\package.json","includedInParent":true,"mtime":1409325772000},{"name":"av","loc":{"line":17,"column":17},"parent":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\flac.js\\src\\demuxer.js","resolved":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\av\\browser.coffee"}],"generated":{"js":"/*\n * FLAC.js - Free Lossless Audio Codec decoder in JavaScript\n * By Devon Govett and Jens Nockert of Official.fm Labs\n *\n * FLAC.js is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * FLAC.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar AV = require('av');\n\nvar FLACDemuxer = AV.Demuxer.extend(function() {\n    AV.Demuxer.register(this);\n    \n    this.probe = function(buffer) {\n        return buffer.peekString(0, 4) === 'fLaC';\n    }\n    \n    const STREAMINFO = 0,\n          PADDING = 1,\n          APPLICATION = 2,\n          SEEKTABLE = 3,\n          VORBIS_COMMENT = 4,\n          CUESHEET = 5,\n          PICTURE = 6,\n          INVALID = 127,\n          STREAMINFO_SIZE = 34;\n    \n    this.prototype.readChunk = function() {\n        var stream = this.stream;\n        \n        if (!this.readHeader && stream.available(4)) {\n            if (stream.readString(4) !== 'fLaC')\n                return this.emit('error', 'Invalid FLAC file.');\n                \n            this.readHeader = true;\n        }\n        \n        while (stream.available(1) && !this.last) {                     \n            if (!this.readBlockHeaders) {\n                var tmp = stream.readUInt8();\n                this.last = (tmp & 0x80) === 0x80,\n                this.type = tmp & 0x7F,\n                this.size = stream.readUInt24();\n            }\n            \n            if (!this.foundStreamInfo && this.type !== STREAMINFO)\n                return this.emit('error', 'STREAMINFO must be the first block');\n                \n            if (!stream.available(this.size))\n                return;\n            \n            switch (this.type) {\n                case STREAMINFO:\n                    if (this.foundStreamInfo)\n                        return this.emit('error', 'STREAMINFO can only occur once.');\n                    \n                    if (this.size !== STREAMINFO_SIZE)\n                        return this.emit('error', 'STREAMINFO size is wrong.');\n                    \n                    this.foundStreamInfo = true;\n                    var bitstream = new AV.Bitstream(stream);\n                \n                    var cookie = {\n                        minBlockSize: bitstream.read(16),\n                        maxBlockSize: bitstream.read(16),\n                        minFrameSize: bitstream.read(24),\n                        maxFrameSize: bitstream.read(24)\n                    };\n                \n                    this.format = {\n                        formatID: 'flac',\n                        sampleRate: bitstream.read(20),\n                        channelsPerFrame: bitstream.read(3) + 1,\n                        bitsPerChannel: bitstream.read(5) + 1\n                    };\n                \n                    this.emit('format', this.format);\n                    this.emit('cookie', cookie);\n                \n                    var sampleCount = bitstream.read(36);\n                    this.emit('duration', sampleCount / this.format.sampleRate * 1000 | 0);\n                \n                    stream.advance(16); // skip MD5 hashes\n                    this.readBlockHeaders = false;\n                    break;\n\n                    /*\n                    I am only looking at the least significant 32 bits of sample number and offset data\n                    This is more than sufficient for the longest flac file I have (~50 mins 2-channel 16-bit 44.1k which uses about 7.5% of the UInt32 space for the largest offset)\n                    Can certainly be improved by storing sample numbers and offests as doubles, but would require additional overriding of the searchTimestamp and seek functions (possibly more?)\n                    Also the flac faq suggests it would be possible to find frame lengths and thus create seek points on the fly via decoding but I assume this would be slow\n                    I may look into these thigns though as my project progresses\n                    */\n                    case SEEKTABLE:\n                        for(var s=0; s<this.size/18; s++)\n                        {\n                            if(stream.peekUInt32(0) == 0xFFFFFFFF && stream.peekUInt32(1) == 0xFFFFFFFF)\n                            {\n                                //placeholder, ignore\n                                stream.advance(18);\n                            } else {\n                                if(stream.readUInt32() > 0)\n                                {\n                                    this.emit('error', 'Seek points with sample number >UInt32 not supported');\n                                }\n                                var samplenum = stream.readUInt32();\n                                if(stream.readUInt32() > 0)\n                                {\n                                    this.emit('error', 'Seek points with stream offset >UInt32 not supported');\n                                }\n                                var offset = stream.readUInt32();\n\n                                stream.advance(2);\n\n                                this.addSeekPoint(offset, samplenum);\n                            }\n                        }\n                        break;\n\n                case VORBIS_COMMENT:\n                    // see http://www.xiph.org/vorbis/doc/v-comment.html\n                    this.metadata || (this.metadata = {});\n                    var len = stream.readUInt32(true);\n                    \n                    this.metadata.vendor = stream.readString(len);\n                    var length = stream.readUInt32(true);\n                    \n                    for (var i = 0; i < length; i++) {\n                        len = stream.readUInt32(true);\n                        var str = stream.readString(len, 'utf8'),\n                            idx = str.indexOf('=');\n                            \n                        this.metadata[str.slice(0, idx).toLowerCase()] = str.slice(idx + 1);\n                    }\n                    \n                    // TODO: standardize field names across formats\n                    break;\n                    \n                case PICTURE:\n                    var type = stream.readUInt32();\n                    if (type !== 3) { // make sure this is album art (type 3)\n                        stream.advance(this.size - 4);\n                    } else {\n                        var mimeLen = stream.readUInt32(),\n                            mime = stream.readString(mimeLen),\n                            descLen = stream.readUInt32(),\n                            description = stream.readString(descLen),\n                            width = stream.readUInt32(),\n                            height = stream.readUInt32(),\n                            depth = stream.readUInt32(),\n                            colors = stream.readUInt32(),\n                            length = stream.readUInt32(),\n                            picture = stream.readBuffer(length);\n                    \n                        this.metadata || (this.metadata = {});\n                        this.metadata.coverArt = picture;\n                    }\n                    \n                    // does anyone want the rest of the info?\n                    break;\n                \n                default:\n                    stream.advance(this.size);\n                    this.readBlockHeaders = false;\n            }\n            \n            if (this.last && this.metadata)\n                this.emit('metadata', this.metadata);\n        }\n        \n        while (stream.available(1) && this.last) {\n            var buffer = stream.readSingleBuffer(stream.remainingBytes());\n            this.emit('data', buffer);\n        }\n    }\n    \n});\n\nmodule.exports = FLACDemuxer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/flac.js/src/demuxer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}}],"sources":{"node_modules/flac.js/src/demuxer.js":"/*\n * FLAC.js - Free Lossless Audio Codec decoder in JavaScript\n * By Devon Govett and Jens Nockert of Official.fm Labs\n *\n * FLAC.js is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * FLAC.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar AV = require('av');\n\nvar FLACDemuxer = AV.Demuxer.extend(function() {\n    AV.Demuxer.register(this);\n    \n    this.probe = function(buffer) {\n        return buffer.peekString(0, 4) === 'fLaC';\n    }\n    \n    const STREAMINFO = 0,\n          PADDING = 1,\n          APPLICATION = 2,\n          SEEKTABLE = 3,\n          VORBIS_COMMENT = 4,\n          CUESHEET = 5,\n          PICTURE = 6,\n          INVALID = 127,\n          STREAMINFO_SIZE = 34;\n    \n    this.prototype.readChunk = function() {\n        var stream = this.stream;\n        \n        if (!this.readHeader && stream.available(4)) {\n            if (stream.readString(4) !== 'fLaC')\n                return this.emit('error', 'Invalid FLAC file.');\n                \n            this.readHeader = true;\n        }\n        \n        while (stream.available(1) && !this.last) {                     \n            if (!this.readBlockHeaders) {\n                var tmp = stream.readUInt8();\n                this.last = (tmp & 0x80) === 0x80,\n                this.type = tmp & 0x7F,\n                this.size = stream.readUInt24();\n            }\n            \n            if (!this.foundStreamInfo && this.type !== STREAMINFO)\n                return this.emit('error', 'STREAMINFO must be the first block');\n                \n            if (!stream.available(this.size))\n                return;\n            \n            switch (this.type) {\n                case STREAMINFO:\n                    if (this.foundStreamInfo)\n                        return this.emit('error', 'STREAMINFO can only occur once.');\n                    \n                    if (this.size !== STREAMINFO_SIZE)\n                        return this.emit('error', 'STREAMINFO size is wrong.');\n                    \n                    this.foundStreamInfo = true;\n                    var bitstream = new AV.Bitstream(stream);\n                \n                    var cookie = {\n                        minBlockSize: bitstream.read(16),\n                        maxBlockSize: bitstream.read(16),\n                        minFrameSize: bitstream.read(24),\n                        maxFrameSize: bitstream.read(24)\n                    };\n                \n                    this.format = {\n                        formatID: 'flac',\n                        sampleRate: bitstream.read(20),\n                        channelsPerFrame: bitstream.read(3) + 1,\n                        bitsPerChannel: bitstream.read(5) + 1\n                    };\n                \n                    this.emit('format', this.format);\n                    this.emit('cookie', cookie);\n                \n                    var sampleCount = bitstream.read(36);\n                    this.emit('duration', sampleCount / this.format.sampleRate * 1000 | 0);\n                \n                    stream.advance(16); // skip MD5 hashes\n                    this.readBlockHeaders = false;\n                    break;\n\n                    /*\n                    I am only looking at the least significant 32 bits of sample number and offset data\n                    This is more than sufficient for the longest flac file I have (~50 mins 2-channel 16-bit 44.1k which uses about 7.5% of the UInt32 space for the largest offset)\n                    Can certainly be improved by storing sample numbers and offests as doubles, but would require additional overriding of the searchTimestamp and seek functions (possibly more?)\n                    Also the flac faq suggests it would be possible to find frame lengths and thus create seek points on the fly via decoding but I assume this would be slow\n                    I may look into these thigns though as my project progresses\n                    */\n                    case SEEKTABLE:\n                        for(var s=0; s<this.size/18; s++)\n                        {\n                            if(stream.peekUInt32(0) == 0xFFFFFFFF && stream.peekUInt32(1) == 0xFFFFFFFF)\n                            {\n                                //placeholder, ignore\n                                stream.advance(18);\n                            } else {\n                                if(stream.readUInt32() > 0)\n                                {\n                                    this.emit('error', 'Seek points with sample number >UInt32 not supported');\n                                }\n                                var samplenum = stream.readUInt32();\n                                if(stream.readUInt32() > 0)\n                                {\n                                    this.emit('error', 'Seek points with stream offset >UInt32 not supported');\n                                }\n                                var offset = stream.readUInt32();\n\n                                stream.advance(2);\n\n                                this.addSeekPoint(offset, samplenum);\n                            }\n                        }\n                        break;\n\n                case VORBIS_COMMENT:\n                    // see http://www.xiph.org/vorbis/doc/v-comment.html\n                    this.metadata || (this.metadata = {});\n                    var len = stream.readUInt32(true);\n                    \n                    this.metadata.vendor = stream.readString(len);\n                    var length = stream.readUInt32(true);\n                    \n                    for (var i = 0; i < length; i++) {\n                        len = stream.readUInt32(true);\n                        var str = stream.readString(len, 'utf8'),\n                            idx = str.indexOf('=');\n                            \n                        this.metadata[str.slice(0, idx).toLowerCase()] = str.slice(idx + 1);\n                    }\n                    \n                    // TODO: standardize field names across formats\n                    break;\n                    \n                case PICTURE:\n                    var type = stream.readUInt32();\n                    if (type !== 3) { // make sure this is album art (type 3)\n                        stream.advance(this.size - 4);\n                    } else {\n                        var mimeLen = stream.readUInt32(),\n                            mime = stream.readString(mimeLen),\n                            descLen = stream.readUInt32(),\n                            description = stream.readString(descLen),\n                            width = stream.readUInt32(),\n                            height = stream.readUInt32(),\n                            depth = stream.readUInt32(),\n                            colors = stream.readUInt32(),\n                            length = stream.readUInt32(),\n                            picture = stream.readBuffer(length);\n                    \n                        this.metadata || (this.metadata = {});\n                        this.metadata.coverArt = picture;\n                    }\n                    \n                    // does anyone want the rest of the info?\n                    break;\n                \n                default:\n                    stream.advance(this.size);\n                    this.readBlockHeaders = false;\n            }\n            \n            if (this.last && this.metadata)\n                this.emit('metadata', this.metadata);\n        }\n        \n        while (stream.available(1) && this.last) {\n            var buffer = stream.readSingleBuffer(stream.remainingBytes());\n            this.emit('data', buffer);\n        }\n    }\n    \n});\n\nmodule.exports = FLACDemuxer;\n"},"lineCount":188}},"error":null,"hash":"4b65b4b7b562f8c570a4a9169e8a7c03","cacheData":{"env":{}}}