{"id":"node_modules/audio-decode/browser.js","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624288368876},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\audio-decode\\package.json","includedInParent":true,"mtime":1516572308000},{"name":"audio-context","loc":{"line":8,"column":27},"parent":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\audio-decode\\browser.js","resolved":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\audio-context\\index.js"},{"name":"to-array-buffer","loc":{"line":9,"column":21},"parent":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\audio-decode\\browser.js","resolved":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\to-array-buffer\\index.js"}],"generated":{"js":"/**\r\n * Web-Audio-API decoder fn style\r\n *\r\n * @module  audio-decode\r\n */\r\n'use strict';\r\n\r\nconst getContext = require('audio-context')\r\nconst toAB = require('to-array-buffer')\r\n\r\nmodule.exports = decode;\r\n\r\nfunction decode (buffer, opts, cb) {\r\n\tif (opts instanceof Function) {\r\n\t\tcb = opts;\r\n\t\topts = {};\r\n\t}\r\n\r\n\tif (!opts) opts = {};\r\n\r\n\tlet ctx = opts.context || getContext();\r\n\r\n\t//blob/file cases\r\n\tif (buffer instanceof Blob) buffer = new File([buffer], 'decode')\r\n\tif (buffer instanceof File) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet reader = new FileReader()\r\n\t\t\t\treader.readAsArrayBuffer(buffer)\r\n\t\t\t\treader.onload = () => {\r\n\t\t\t\t\treturn resolve(decode(reader.result, opts, cb))\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\treject(e)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tif (!(buffer instanceof ArrayBuffer)) {\r\n\t\tbuffer = toAB(buffer)\r\n\t}\r\n\r\n\t// decodeAudioData spoils the initial buffer, so we have to copy that\r\n\treturn ctx.decodeAudioData(buffer.slice(), (buf) => {\r\n\t\tcb && cb(null, buf);\r\n\t}, (err) => {\r\n\t\tcb && cb(err);\r\n\t});\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/audio-decode/browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/audio-decode/browser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"node_modules/audio-decode/browser.js":"/**\r\n * Web-Audio-API decoder fn style\r\n *\r\n * @module  audio-decode\r\n */\r\n'use strict';\r\n\r\nconst getContext = require('audio-context')\r\nconst toAB = require('to-array-buffer')\r\n\r\nmodule.exports = decode;\r\n\r\nfunction decode (buffer, opts, cb) {\r\n\tif (opts instanceof Function) {\r\n\t\tcb = opts;\r\n\t\topts = {};\r\n\t}\r\n\r\n\tif (!opts) opts = {};\r\n\r\n\tlet ctx = opts.context || getContext();\r\n\r\n\t//blob/file cases\r\n\tif (buffer instanceof Blob) buffer = new File([buffer], 'decode')\r\n\tif (buffer instanceof File) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet reader = new FileReader()\r\n\t\t\t\treader.readAsArrayBuffer(buffer)\r\n\t\t\t\treader.onload = () => {\r\n\t\t\t\t\treturn resolve(decode(reader.result, opts, cb))\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\treject(e)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tif (!(buffer instanceof ArrayBuffer)) {\r\n\t\tbuffer = toAB(buffer)\r\n\t}\r\n\r\n\t// decodeAudioData spoils the initial buffer, so we have to copy that\r\n\treturn ctx.decodeAudioData(buffer.slice(), (buf) => {\r\n\t\tcb && cb(null, buf);\r\n\t}, (err) => {\r\n\t\tcb && cb(err);\r\n\t});\r\n}\r\n"},"lineCount":50}},"error":null,"hash":"b82b443a897840b68f6d428ccef2ee6f","cacheData":{"env":{}}}