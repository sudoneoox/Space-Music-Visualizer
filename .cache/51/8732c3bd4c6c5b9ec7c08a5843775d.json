{"id":"N4Qd","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\build\\es2019\\factories\\fetch-source.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\src\\factories\\fetch-source.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624402241757},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createFetchSource=void 0;const e=e=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw e()};exports.createFetchSource=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":99}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":101}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":1,"column":107}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":55},"generated":{"line":1,"column":109}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":4,"column":11},"generated":{"line":1,"column":112}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":4,"column":11},"generated":{"line":1,"column":118}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":1,"column":122}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":1,"column":126}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":1,"column":132}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":6,"column":35},"generated":{"line":1,"column":140}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":1,"column":146}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":1,"column":149}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":1,"column":152}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":8,"column":25},"generated":{"line":1,"column":154}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":1,"column":157}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":1,"column":163}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":9,"column":30},"generated":{"line":1,"column":170}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":9,"column":39},"generated":{"line":1,"column":172}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":9,"column":47},"generated":{"line":1,"column":179}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":9,"column":56},"generated":{"line":1,"column":181}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":11,"column":10},"generated":{"line":1,"column":186}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":1,"column":193}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":1,"column":199}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":204}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":212}},{"source":"../../../src/factories/fetch-source.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":1,"column":230}}],"sources":{"../../../src/factories/fetch-source.ts":"import { TFetchSourceFactory } from '../types';\n\nexport const createFetchSource: TFetchSourceFactory = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        } catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n\n        throw createAbortError();\n    };\n};\n"},"lineCount":null}},"error":null,"hash":"11e89195b5933ff9eed9ad2a9ac78f17","cacheData":{"env":{}}}