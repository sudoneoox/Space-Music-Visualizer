{"id":"node_modules/string-to-arraybuffer/index.js","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624288368876},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\string-to-arraybuffer\\package.json","includedInParent":true,"mtime":499162500000},{"name":"atob-lite","loc":{"line":7,"column":19},"parent":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\string-to-arraybuffer\\index.js","resolved":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\atob-lite\\atob-browser.js"},{"name":"is-base64","loc":{"line":8,"column":23},"parent":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\string-to-arraybuffer\\index.js","resolved":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\is-base64\\is-base64.js"}],"generated":{"js":"/**\r\n * @module  string-to-arraybuffer\r\n */\r\n\r\n'use strict'\r\n\r\nvar atob = require('atob-lite')\r\nvar isBase64 = require('is-base64')\r\n\r\nmodule.exports = function stringToArrayBuffer (arg) {\r\n\tif (typeof arg !== 'string') throw Error('Argument should be a string')\r\n\r\n\t//valid data uri\r\n\tif (/^data\\:/i.test(arg)) return decode(arg)\r\n\r\n\t//base64\r\n\tif (isBase64(arg)) arg = atob(arg)\r\n\r\n\treturn str2ab(arg)\r\n}\r\n\r\nfunction str2ab (str) {\r\n\tvar array = new Uint8Array(str.length);\r\n\tfor(var i = 0; i < str.length; i++) {\r\n\t\tarray[i] = str.charCodeAt(i);\r\n\t}\r\n\treturn array.buffer\r\n}\r\n\r\nfunction decode(uri) {\r\n\t// strip newlines\r\n\turi = uri.replace(/\\r?\\n/g, '');\r\n\r\n\t// split the URI up into the \"metadata\" and the \"data\" portions\r\n\tvar firstComma = uri.indexOf(',');\r\n\tif (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data-URI');\r\n\r\n\t// remove the \"data:\" scheme and parse the metadata\r\n\tvar meta = uri.substring(5, firstComma).split(';');\r\n\r\n\tvar base64 = false;\r\n\tvar charset = 'US-ASCII';\r\n\tfor (var i = 0; i < meta.length; i++) {\r\n\t\tif ('base64' == meta[i]) {\r\n\t\t\tbase64 = true;\r\n\t\t} else if (0 == meta[i].indexOf('charset=')) {\r\n\t\t\tcharset = meta[i].substring(8);\r\n\t\t}\r\n\t}\r\n\r\n\t// get the encoded data portion and decode URI-encoded chars\r\n\tvar data = unescape(uri.substring(firstComma + 1));\r\n\r\n\tif (base64) data = atob(data)\r\n\r\n\tvar abuf = str2ab(data)\r\n\r\n\tabuf.type = meta[0] || 'text/plain'\r\n\tabuf.charset = charset\r\n\r\n\treturn abuf\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/string-to-arraybuffer/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"node_modules/string-to-arraybuffer/index.js":"/**\r\n * @module  string-to-arraybuffer\r\n */\r\n\r\n'use strict'\r\n\r\nvar atob = require('atob-lite')\r\nvar isBase64 = require('is-base64')\r\n\r\nmodule.exports = function stringToArrayBuffer (arg) {\r\n\tif (typeof arg !== 'string') throw Error('Argument should be a string')\r\n\r\n\t//valid data uri\r\n\tif (/^data\\:/i.test(arg)) return decode(arg)\r\n\r\n\t//base64\r\n\tif (isBase64(arg)) arg = atob(arg)\r\n\r\n\treturn str2ab(arg)\r\n}\r\n\r\nfunction str2ab (str) {\r\n\tvar array = new Uint8Array(str.length);\r\n\tfor(var i = 0; i < str.length; i++) {\r\n\t\tarray[i] = str.charCodeAt(i);\r\n\t}\r\n\treturn array.buffer\r\n}\r\n\r\nfunction decode(uri) {\r\n\t// strip newlines\r\n\turi = uri.replace(/\\r?\\n/g, '');\r\n\r\n\t// split the URI up into the \"metadata\" and the \"data\" portions\r\n\tvar firstComma = uri.indexOf(',');\r\n\tif (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data-URI');\r\n\r\n\t// remove the \"data:\" scheme and parse the metadata\r\n\tvar meta = uri.substring(5, firstComma).split(';');\r\n\r\n\tvar base64 = false;\r\n\tvar charset = 'US-ASCII';\r\n\tfor (var i = 0; i < meta.length; i++) {\r\n\t\tif ('base64' == meta[i]) {\r\n\t\t\tbase64 = true;\r\n\t\t} else if (0 == meta[i].indexOf('charset=')) {\r\n\t\t\tcharset = meta[i].substring(8);\r\n\t\t}\r\n\t}\r\n\r\n\t// get the encoded data portion and decode URI-encoded chars\r\n\tvar data = unescape(uri.substring(firstComma + 1));\r\n\r\n\tif (base64) data = atob(data)\r\n\r\n\tvar abuf = str2ab(data)\r\n\r\n\tabuf.type = meta[0] || 'text/plain'\r\n\tabuf.charset = charset\r\n\r\n\treturn abuf\r\n}\r\n"},"lineCount":63}},"error":null,"hash":"fe016ffe14a2618fdf343fd96151da65","cacheData":{"env":{}}}