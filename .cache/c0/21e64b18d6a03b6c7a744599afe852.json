{"id":"Pqq9","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\build\\es2019\\factories\\get-audio-node-renderer.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\src\\factories\\get-audio-node-renderer.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624402241757},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createGetAudioNodeRenderer=void 0;const e=e=>r=>{const o=e(r);if(null===o.renderer)throw new Error(\"Missing the renderer of the given AudioNode in the audio graph.\");return o.renderer};exports.createGetAudioNodeRenderer=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":108}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":110}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":1,"column":116}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":73},"generated":{"line":1,"column":118}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":1,"column":121}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":14},"generated":{"line":1,"column":125}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":14},"generated":{"line":1,"column":131}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":37},"generated":{"line":1,"column":133}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":61},"generated":{"line":1,"column":135}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":1,"column":138}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":46},"generated":{"line":1,"column":141}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":1,"column":148}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":33},"generated":{"line":1,"column":150}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":1,"column":159}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":1,"column":165}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":1,"column":169}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":28},"generated":{"line":1,"column":175}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":14,"column":53},"generated":{"line":1,"column":242}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":14,"column":53},"generated":{"line":1,"column":249}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":14,"column":74},"generated":{"line":1,"column":251}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":261}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":269}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":296}}],"sources":{"../../../src/factories/get-audio-node-renderer.ts":"import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGetAudioNodeRendererFactory } from '../types';\n\nexport const createGetAudioNodeRenderer: TGetAudioNodeRendererFactory = (getAudioNodeConnections) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioNode: IAudioNode<T>\n    ): IAudioNodeRenderer<T, IAudioNode<T>> => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n\n        return <IAudioNodeRenderer<T, IAudioNode<T>>>audioNodeConnections.renderer;\n    };\n};\n"},"lineCount":null}},"error":null,"hash":"1864642e15d448fb581ad48303dd65a7","cacheData":{"env":{}}}