{"id":"uN17","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\build\\es2019\\factories\\get-audio-param-renderer.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\src\\factories\\get-audio-param-renderer.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624398373526},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createGetAudioParamRenderer=void 0;const e=e=>r=>{const t=e(r);if(null===t.renderer)throw new Error(\"Missing the renderer of the given AudioParam in the audio graph.\");return t.renderer};exports.createGetAudioParamRenderer=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":109}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":111}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":1,"column":117}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":75},"generated":{"line":1,"column":119}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":5,"column":12},"generated":{"line":1,"column":122}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":1,"column":126}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":6,"column":14},"generated":{"line":1,"column":132}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":6,"column":38},"generated":{"line":1,"column":134}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":6,"column":92},"generated":{"line":1,"column":136}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":139}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":8,"column":47},"generated":{"line":1,"column":142}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":149}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":8,"column":34},"generated":{"line":1,"column":151}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":1,"column":160}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":9,"column":18},"generated":{"line":1,"column":166}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":9,"column":22},"generated":{"line":1,"column":170}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":1,"column":176}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":1,"column":244}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":1,"column":251}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":12,"column":37},"generated":{"line":1,"column":253}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":263}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":271}},{"source":"../../../src/factories/get-audio-param-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":299}}],"sources":{"../../../src/factories/get-audio-param-renderer.ts":"import { IMinimalOfflineAudioContext } from '../interfaces';\nimport { TGetAudioParamRendererFactory } from '../types';\n\nexport const createGetAudioParamRenderer: TGetAudioParamRendererFactory = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections<IMinimalOfflineAudioContext>(audioParam);\n\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n\n        return audioParamConnections.renderer;\n    };\n};\n"},"lineCount":null}},"error":null,"hash":"8783297cedd4bdb1e9e3ae0c29358268","cacheData":{"env":{}}}