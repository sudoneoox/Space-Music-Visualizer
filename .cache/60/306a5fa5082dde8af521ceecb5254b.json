{"id":"qYT0","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\build\\es2019\\factories\\test-audio-node-connect-method-support.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\src\\factories\\test-audio-node-connect-method-support.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624398373526},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createTestAudioNodeConnectMethodSupport=void 0;const e=e=>()=>{if(null===e)return!1;const t=new e(1,1,44100).createGain(),o=t.connect(t)===t;return t.disconnect(t),o};exports.createTestAudioNodeConnectMethodSupport=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":121}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":123}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":1,"column":129}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":1,"column":131}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":1,"column":134}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":139}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":8,"column":53},"generated":{"line":1,"column":142}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":8,"column":12},"generated":{"line":1,"column":149}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":9,"column":19},"generated":{"line":1,"column":151}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":9,"column":19},"generated":{"line":1,"column":158}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":12,"column":14},"generated":{"line":1,"column":160}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":13,"column":14},"generated":{"line":1,"column":166}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":12,"column":42},"generated":{"line":1,"column":168}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":12,"column":46},"generated":{"line":1,"column":172}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":12,"column":83},"generated":{"line":1,"column":174}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":12,"column":86},"generated":{"line":1,"column":176}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":12,"column":89},"generated":{"line":1,"column":178}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":13,"column":57},"generated":{"line":1,"column":185}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":1,"column":198}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":14,"column":28},"generated":{"line":1,"column":200}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":14,"column":43},"generated":{"line":1,"column":202}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":14,"column":51},"generated":{"line":1,"column":210}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":14,"column":71},"generated":{"line":1,"column":215}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":1,"column":217}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":1,"column":224}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":16,"column":23},"generated":{"line":1,"column":226}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":16,"column":34},"generated":{"line":1,"column":237}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":18,"column":15},"generated":{"line":1,"column":240}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":243}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":251}},{"source":"../../../src/factories/test-audio-node-connect-method-support.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":291}}],"sources":{"../../../src/factories/test-audio-node-connect-method-support.ts":"import { TTestAudioNodeConnectMethodSupportFactory } from '../types';\n\n// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport: TTestAudioNodeConnectMethodSupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeGainNode = nativeOfflineAudioContext.createGain();\n        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n\n        nativeGainNode.disconnect(nativeGainNode);\n\n        return isSupported;\n    };\n};\n"},"lineCount":null}},"error":null,"hash":"8f8d520f80f4b32c417a25ae56f3036a","cacheData":{"env":{}}}