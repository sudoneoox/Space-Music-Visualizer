{"id":"pqs8","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\build\\es2019\\factories\\render-inputs-of-audio-param.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\src\\factories\\render-inputs-of-audio-param.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624398373526},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\standardized-audio-context\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.createRenderInputsOfAudioParam=void 0;const e=(e,t,r)=>async(a,s,n,o)=>{const c=t(a);await Promise.all(Array.from(c.activeInputs).map(async([t,a])=>{const c=e(t),i=await c.render(t,s,o);r(t)||i.connect(n,a)}))};exports.createRenderInputsOfAudioParam=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":112}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":114}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":1,"column":120}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":80},"generated":{"line":1,"column":122}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":1,"column":123}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":1,"column":125}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":1,"column":127}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":9,"column":11},"generated":{"line":1,"column":131}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":1,"column":137}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":1,"column":139}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":1,"column":141}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":1,"column":143}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":1,"column":148}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":15,"column":14},"generated":{"line":1,"column":154}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":15,"column":38},"generated":{"line":1,"column":156}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":15,"column":66},"generated":{"line":1,"column":158}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":17,"column":14},"generated":{"line":1,"column":167}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":17,"column":22},"generated":{"line":1,"column":175}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":18,"column":12},"generated":{"line":1,"column":179}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":1,"column":185}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":18,"column":23},"generated":{"line":1,"column":190}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":18,"column":45},"generated":{"line":1,"column":192}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":18,"column":59},"generated":{"line":1,"column":206}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":18,"column":63},"generated":{"line":1,"column":210}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":18,"column":71},"generated":{"line":1,"column":217}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":18,"column":79},"generated":{"line":1,"column":219}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":19,"column":22},"generated":{"line":1,"column":225}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":19,"column":22},"generated":{"line":1,"column":231}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":19,"column":42},"generated":{"line":1,"column":233}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":19,"column":63},"generated":{"line":1,"column":235}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":1,"column":238}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":20,"column":54},"generated":{"line":1,"column":246}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":20,"column":72},"generated":{"line":1,"column":248}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":20,"column":79},"generated":{"line":1,"column":255}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":20,"column":87},"generated":{"line":1,"column":257}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":20,"column":114},"generated":{"line":1,"column":259}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":22,"column":21},"generated":{"line":1,"column":262}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":22,"column":36},"generated":{"line":1,"column":264}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":1,"column":268}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":23,"column":44},"generated":{"line":1,"column":270}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":23,"column":52},"generated":{"line":1,"column":278}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":23,"column":70},"generated":{"line":1,"column":280}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":287}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":295}},{"source":"../../../src/factories/render-inputs-of-audio-param.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":1,"column":326}}],"sources":{"../../../src/factories/render-inputs-of-audio-param.ts":"import { IAudioNode, IAudioParam, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TNativeAudioParam, TNativeOfflineAudioContext, TRenderInputsOfAudioParamFactory } from '../types';\n\nexport const createRenderInputsOfAudioParam: TRenderInputsOfAudioParamFactory = (\n    getAudioNodeRenderer,\n    getAudioParamConnections,\n    isPartOfACycle\n) => {\n    return async <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioParam: IAudioParam,\n        nativeOfflineAudioContext: TNativeOfflineAudioContext,\n        nativeAudioParam: TNativeAudioParam,\n        trace: readonly IAudioNode<T>[]\n    ): Promise<void> => {\n        const audioParamConnections = getAudioParamConnections<T>(audioParam);\n\n        await Promise.all(\n            Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n                const audioNodeRenderer = getAudioNodeRenderer(source);\n                const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n\n                if (!isPartOfACycle(source)) {\n                    renderedNativeAudioNode.connect(nativeAudioParam, output);\n                }\n            })\n        );\n    };\n};\n"},"lineCount":null}},"error":null,"hash":"7709576b948ca34473d542bb5d95a628","cacheData":{"env":{}}}