{"id":"node_modules/to-array-buffer/index.js","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624288368876},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\to-array-buffer\\package.json","includedInParent":true,"mtime":499162500000},{"name":"string-to-arraybuffer","loc":{"line":7,"column":21},"parent":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\to-array-buffer\\index.js","resolved":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\string-to-arraybuffer\\index.js"},{"name":"flatten-vertex-data","loc":{"line":8,"column":19},"parent":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\to-array-buffer\\index.js","resolved":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\flatten-vertex-data\\index.js"}],"generated":{"js":"/**\r\n * @module  to-array-buffer\r\n */\r\n\r\n'use strict'\r\n\r\nvar str2ab = require('string-to-arraybuffer')\r\nvar flat = require('flatten-vertex-data')\r\n// var isBlob = require('is-blob')\r\n\r\n\r\nmodule.exports = function toArrayBuffer (arg) {\r\n\t//zero-length or undefined-like\r\n\tif (!arg) return new ArrayBuffer()\r\n\r\n\t//array buffer\r\n\tif (arg instanceof ArrayBuffer) return arg\r\n\r\n\t//try to decode data-uri\r\n\tif (typeof arg === 'string') {\r\n\t\treturn str2ab(arg)\r\n\t}\r\n\r\n\t// File & Blob\r\n\t// if (isBlob(src) || (src instanceof global.File)) {\r\n\t\t// FIXME: we cannot use it here bc FileReader is async\r\n\t// }\r\n\r\n\t//array buffer view: TypedArray, DataView, Buffer etc\r\n\tif (ArrayBuffer.isView(arg)) {\r\n\t\tif (arg.byteOffset != null) return arg.buffer.slice(arg.byteOffset, arg.byteOffset + arg.byteLength)\r\n\t\treturn arg.buffer\r\n\t}\r\n\r\n\t//buffer/data nested: NDArray, ImageData etc.\r\n\t//FIXME: NDArrays with custom data type may be invalid for this procedure\r\n\tif (arg.buffer || arg.data || arg._data) {\r\n\t\tvar result = toArrayBuffer(arg.buffer || arg.data || arg._data)\r\n\t\treturn result\r\n\t}\r\n\r\n\t// detect if flat\r\n\tif (arg.length != null) {\r\n\t\tfor (var i = 0; i < arg.length; i++) {\r\n\t\t\tif (arg[i].length != null) {\r\n\t\t\t\targ = flat(arg)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//array-like or unknown\r\n\t//hope Uint8Array knows better how to treat the input\r\n\treturn (new Uint8Array(arg.length != null ? arg : [arg])).buffer\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/to-array-buffer/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/to-array-buffer/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"node_modules/to-array-buffer/index.js":"/**\r\n * @module  to-array-buffer\r\n */\r\n\r\n'use strict'\r\n\r\nvar str2ab = require('string-to-arraybuffer')\r\nvar flat = require('flatten-vertex-data')\r\n// var isBlob = require('is-blob')\r\n\r\n\r\nmodule.exports = function toArrayBuffer (arg) {\r\n\t//zero-length or undefined-like\r\n\tif (!arg) return new ArrayBuffer()\r\n\r\n\t//array buffer\r\n\tif (arg instanceof ArrayBuffer) return arg\r\n\r\n\t//try to decode data-uri\r\n\tif (typeof arg === 'string') {\r\n\t\treturn str2ab(arg)\r\n\t}\r\n\r\n\t// File & Blob\r\n\t// if (isBlob(src) || (src instanceof global.File)) {\r\n\t\t// FIXME: we cannot use it here bc FileReader is async\r\n\t// }\r\n\r\n\t//array buffer view: TypedArray, DataView, Buffer etc\r\n\tif (ArrayBuffer.isView(arg)) {\r\n\t\tif (arg.byteOffset != null) return arg.buffer.slice(arg.byteOffset, arg.byteOffset + arg.byteLength)\r\n\t\treturn arg.buffer\r\n\t}\r\n\r\n\t//buffer/data nested: NDArray, ImageData etc.\r\n\t//FIXME: NDArrays with custom data type may be invalid for this procedure\r\n\tif (arg.buffer || arg.data || arg._data) {\r\n\t\tvar result = toArrayBuffer(arg.buffer || arg.data || arg._data)\r\n\t\treturn result\r\n\t}\r\n\r\n\t// detect if flat\r\n\tif (arg.length != null) {\r\n\t\tfor (var i = 0; i < arg.length; i++) {\r\n\t\t\tif (arg[i].length != null) {\r\n\t\t\t\targ = flat(arg)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//array-like or unknown\r\n\t//hope Uint8Array knows better how to treat the input\r\n\treturn (new Uint8Array(arg.length != null ? arg : [arg])).buffer\r\n}\r\n"},"lineCount":56}},"error":null,"hash":"03e930ad34babf86f9b5c60894db0e37","cacheData":{"env":{}}}