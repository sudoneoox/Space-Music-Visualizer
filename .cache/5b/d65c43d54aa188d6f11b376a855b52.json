{"id":"node_modules/av/src/core/base.coffee","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624288368876},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\av\\package.json","includedInParent":true,"mtime":1624288427802}],"generated":{"js":"(function() {\n    // The Base class defines an extend method so that\n  // CoffeeScript classes can be extended easily by \n  // plain JavaScript. Based on http://ejohn.org/blog/simple-javascript-inheritance/.\n\n  var Base,\n    indexOf = [].indexOf;\n\n  Base = (function() {\n    var fnTest;\n\n    class Base {\n      static extend(prop) {\n        var Class, _super, fn, key, keys, ref;\n        Class = class Class extends this {};\n        if (typeof prop === 'function') {\n          keys = Object.keys(Class.prototype);\n          prop.call(Class, Class);\n          prop = {};\n          ref = Class.prototype;\n          for (key in ref) {\n            fn = ref[key];\n            if (indexOf.call(keys, key) < 0) {\n              prop[key] = fn;\n            }\n          }\n        }\n        _super = Class.__super__;\n        for (key in prop) {\n          fn = prop[key];\n          // test whether the method actually uses _super() and wrap it if so\n          if (typeof fn === 'function' && fnTest.test(fn)) {\n            (function(key, fn) {\n              return Class.prototype[key] = function() {\n                var ret, tmp;\n                tmp = this._super;\n                this._super = _super[key];\n                ret = fn.apply(this, arguments);\n                this._super = tmp;\n                return ret;\n              };\n            })(key, fn);\n          } else {\n            Class.prototype[key] = fn;\n          }\n        }\n        return Class;\n      }\n\n    };\n\n    fnTest = /\\b_super\\b/;\n\n    return Base;\n\n  }).call(this);\n\n  module.exports = Base;\n\n}).call(this);\n"},"sourceMaps":{"js":{"version":3,"file":"","sourceRoot":"","sources":["node_modules/av/src/core/base.coffee"],"names":[],"mappings":"AAIC;EAAA;;;;AAAA,MAAA,IAAA;IAAA;;EAEK;;;IAAN,MAAA,KAAA;MAGa,OAAR,MAAQ,CAAC,IAAD,CAAA;AACb,YAAA,KAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA;QAAc,QAAN,MAAA,MAAA,QAAoB,KAApB,CAAA;QAEA,IAAG,OAAO,IAAP,KAAe,UAAlB;UACI,IAAA,GAAO,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,SAAlB;UACP,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,KAAjB;UAEA,IAAA,GAAO,CAAA;AACP;UAAA,KAAA,UAAA;;6BAA+C,MAAX;cAChC,IAAI,CAAC,GAAD,CAAJ,GAAY;;UADhB,CALJ;;QAQA,MAAA,GAAS,KAAK,CAAC;QAEf,KAAA,WAAA;yBAAA;;UAEI,IAAG,OAAO,EAAP,KAAa,UAAb,IAA4B,MAAM,CAAC,IAAP,CAAY,EAAZ,CAA/B;YACO,CAAA,QAAA,CAAC,GAAD,EAAM,EAAN,CAAA;qBACC,KAAK,CAAA,SAAE,CAAC,GAAD,CAAP,GAAe,QAAA,CAAA,CAAA;AACnC,oBAAA,GAAA,EAAA;gBAAwB,GAAA,GAAM,IAAI,CAAC;gBACX,IAAI,CAAC,MAAL,GAAc,MAAM,CAAC,GAAD;gBAEpB,GAAA,GAAM,EAAE,CAAC,KAAH,CAAS,IAAT,EAAe,SAAf;gBACN,IAAI,CAAC,MAAL,GAAc;AAEd,uBAAO;cAPI;YADhB,CAAA,EAAC,KAAK,IADb;WAAA,MAAA;YAYI,KAAK,CAAA,SAAE,CAAC,GAAD,CAAP,GAAe,GAZnB;;QAFJ;AAgBA,eAAO;MA7BF;;IAHb;;IACI,MAAA,GAAS;;;;;;EAiCb,MAAM,CAAC,OAAP,GAAiB;AApChB","sourcesContent":["#\n# The Base class defines an extend method so that\n# CoffeeScript classes can be extended easily by \n# plain JavaScript. Based on http://ejohn.org/blog/simple-javascript-inheritance/.\n#\n\nclass Base\n    fnTest = /\\b_super\\b/\n    \n    @extend: (prop) ->\n        class Class extends this\n            \n        if typeof prop is 'function'\n            keys = Object.keys Class.prototype\n            prop.call(Class, Class)\n            \n            prop = {}\n            for key, fn of Class.prototype when key not in keys\n                prop[key] = fn\n        \n        _super = Class.__super__\n        \n        for key, fn of prop\n            # test whether the method actually uses _super() and wrap it if so\n            if typeof fn is 'function' and fnTest.test(fn)\n                do (key, fn) ->\n                    Class::[key] = ->\n                        tmp = this._super\n                        this._super = _super[key]\n                        \n                        ret = fn.apply(this, arguments)\n                        this._super = tmp\n                        \n                        return ret\n                        \n            else\n                Class::[key] = fn\n                \n        return Class\n        \nmodule.exports = Base\n"]}},"error":null,"hash":"dac26c8b06dec20e822839df9e5a380d","cacheData":{"env":{}}}