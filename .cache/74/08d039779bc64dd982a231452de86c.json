{"id":"node_modules/av/src/core/bufferlist.coffee","dependencies":[{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\package.json","includedInParent":true,"mtime":1624288368876},{"name":"C:\\Users\\Diego\\Downloads\\Documents\\three js\\AbsurbPlace\\node_modules\\av\\package.json","includedInParent":true,"mtime":1624288427802}],"generated":{"js":"(function() {\n  var BufferList;\n\n  BufferList = class BufferList {\n    constructor() {\n      this.first = null;\n      this.last = null;\n      this.numBuffers = 0;\n      this.availableBytes = 0;\n      this.availableBuffers = 0;\n    }\n\n    copy() {\n      var result;\n      result = new BufferList();\n      result.first = this.first;\n      result.last = this.last;\n      result.numBuffers = this.numBuffers;\n      result.availableBytes = this.availableBytes;\n      result.availableBuffers = this.availableBuffers;\n      return result;\n    }\n\n    append(buffer) {\n      var ref;\n      buffer.prev = this.last;\n      if ((ref = this.last) != null) {\n        ref.next = buffer;\n      }\n      this.last = buffer;\n      if (this.first == null) {\n        this.first = buffer;\n      }\n      this.availableBytes += buffer.length;\n      this.availableBuffers++;\n      return this.numBuffers++;\n    }\n\n    advance() {\n      if (this.first) {\n        this.availableBytes -= this.first.length;\n        this.availableBuffers--;\n        this.first = this.first.next;\n        return this.first != null;\n      }\n      return false;\n    }\n\n    rewind() {\n      var ref;\n      if (this.first && !this.first.prev) {\n        return false;\n      }\n      this.first = ((ref = this.first) != null ? ref.prev : void 0) || this.last;\n      if (this.first) {\n        this.availableBytes += this.first.length;\n        this.availableBuffers++;\n      }\n      return this.first != null;\n    }\n\n    reset() {\n      var results;\n      results = [];\n      while (this.rewind()) {\n        continue;\n      }\n      return results;\n    }\n\n  };\n\n  module.exports = BufferList;\n\n}).call(this);\n"},"sourceMaps":{"js":{"version":3,"file":"","sourceRoot":"","sources":["node_modules/av/src/core/bufferlist.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAM,aAAN,MAAA,WAAA;IACI,WAAa,CAAA,CAAA;MACT,IAAC,CAAA,KAAD,GAAS;MACT,IAAC,CAAA,IAAD,GAAQ;MACR,IAAC,CAAA,UAAD,GAAc;MACd,IAAC,CAAA,cAAD,GAAkB;MAClB,IAAC,CAAA,gBAAD,GAAoB;IALX;;IAOb,IAAM,CAAA,CAAA;AACV,UAAA;MAAQ,MAAA,GAAS,IAAI,UAAJ,CAAA;MAET,MAAM,CAAC,KAAP,GAAe,IAAC,CAAA;MAChB,MAAM,CAAC,IAAP,GAAc,IAAC,CAAA;MACf,MAAM,CAAC,UAAP,GAAoB,IAAC,CAAA;MACrB,MAAM,CAAC,cAAP,GAAwB,IAAC,CAAA;MACzB,MAAM,CAAC,gBAAP,GAA0B,IAAC,CAAA;AAE3B,aAAO;IATL;;IAWN,MAAQ,CAAC,MAAD,CAAA;AACZ,UAAA;MAAQ,MAAM,CAAC,IAAP,GAAc,IAAC,CAAA;;WACV,CAAE,IAAP,GAAc;;MACd,IAAC,CAAA,IAAD,GAAQ;;QACR,IAAC,CAAA,QAAS;;MAEV,IAAC,CAAA,cAAD,IAAmB,MAAM,CAAC;MAC1B,IAAC,CAAA,gBAAD;aACA,IAAC,CAAA,UAAD;IARI;;IAUR,OAAS,CAAA,CAAA;MACL,IAAG,IAAC,CAAA,KAAJ;QACI,IAAC,CAAA,cAAD,IAAmB,IAAC,CAAA,KAAK,CAAC;QAC1B,IAAC,CAAA,gBAAD;QACA,IAAC,CAAA,KAAD,GAAS,IAAC,CAAA,KAAK,CAAC;AAChB,eAAO,mBAJX;;AAMA,aAAO;IAPF;;IAST,MAAQ,CAAA,CAAA;AACZ,UAAA;MAAQ,IAAG,IAAC,CAAA,KAAD,IAAW,CAAI,IAAC,CAAA,KAAK,CAAC,IAAzB;AACI,eAAO,MADX;;MAGA,IAAC,CAAA,KAAD,oCAAe,CAAE,cAAR,IAAgB,IAAC,CAAA;MAC1B,IAAG,IAAC,CAAA,KAAJ;QACI,IAAC,CAAA,cAAD,IAAmB,IAAC,CAAA,KAAK,CAAC;QAC1B,IAAC,CAAA,gBAAD,GAFJ;;AAIA,aAAO;IATH;;IAWR,KAAO,CAAA,CAAA;AACX,UAAA;AAAQ;aAAe,IAAC,CAAA,MAAD,CAAA,CAAf;AAAA;MAAA,CAAA;;IADG;;EAjDX;;EAoDA,MAAM,CAAC,OAAP,GAAiB;AApDjB","sourcesContent":["class BufferList\n    constructor: ->\n        @first = null\n        @last = null\n        @numBuffers = 0\n        @availableBytes = 0\n        @availableBuffers = 0        \n    \n    copy: ->\n        result = new BufferList\n\n        result.first = @first\n        result.last = @last\n        result.numBuffers = @numBuffers\n        result.availableBytes = @availableBytes\n        result.availableBuffers = @availableBuffers\n        \n        return result\n        \n    append: (buffer) ->\n        buffer.prev = @last\n        @last?.next = buffer\n        @last = buffer\n        @first ?= buffer\n        \n        @availableBytes += buffer.length\n        @availableBuffers++\n        @numBuffers++\n        \n    advance: ->\n        if @first\n            @availableBytes -= @first.length\n            @availableBuffers--\n            @first = @first.next\n            return @first?\n            \n        return false\n        \n    rewind: ->\n        if @first and not @first.prev\n            return false\n        \n        @first = @first?.prev or @last\n        if @first\n            @availableBytes += @first.length\n            @availableBuffers++\n            \n        return @first?\n        \n    reset: ->\n        continue while @rewind()\n        \nmodule.exports = BufferList\n"]}},"error":null,"hash":"e3eed4432dbfc14cc2c7b070b4ad4701","cacheData":{"env":{}}}